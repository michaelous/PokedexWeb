{"version":3,"sources":["components/styled/pokemonTile.js","components/styled/pokemonImage.js","components/styled/PokemonTileName.js","components/popup/tabPanel.js","helpers/pokemonHelper.js","components/popup/tabs.js","images/svg/left-arrow.svg","components/styled/popup/leftArrow.js","components/styled/popup/pokemonType.js","components/styled/popup/pokemonPopupImg.js","components/popup/pokemonPopup.js","components/styled/pokemonWrapper.js","components/pokemonList.js","components/styled/pagination/paginationWrapper.js","components/pagination.js","components/styled/navbar.js","components/styled/logo.js","images/PokedexLogo.png","components/styled/quantity.js","components/styled/favouriteWrapper.js","components/styled/favourites/favPokemon.js","components/styled/favourites/shrugFace.js","components/styled/favourites/removePokemon.js","components/styled/favourites/popupHeader.js","components/favouritesPopup.js","components/navbar.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonTile","styled","div","PokemonImg","img","PokemonName","p","TabPanel","props","children","value","index","Box","className","getName","data","name","getID","id","getType","types","type","getHeight","height","getWeight","weight","getImg","sprites","other","getMove","moves","move","getBaseExp","base_experience","getAbility","abilities","ability","getHPStats","stats","base_stat","getSpeciesName","species","getAtkStats","getDefStats","getSpecialStats","imgFromURL","ID","parseInt","split","FullWidthTabs","useState","setValue","theme","useTheme","Tabs","onChange","event","newValue","indicatorColor","Tab","label","axis","direction","onChangeIndex","dir","display","justifyContent","flexDirection","style","width","slice","map","val","LeftArrow","PokemonType","PokemonPopupImg","PokemonPopup","pokemon","closePopup","open","dispatch","useDispatch","pokemonType","favorites","useSelector","state","reducer","Modal","onClose","onClick","alt","src","arrow","product","addHandler","some","PokemonWrapper","PokemonList","pokemons","pokemonData","selectPokemonData","setOpen","url","axios","get","then","response","handlePopup","PaginationWrapper","Pagination","gotoPrevPage","gotoNextPage","Button","variant","color","NavBar","nav","Logo","FavoritesQty","FavoriteWrapper","FavPokemon","ShrugFace","RemovePokemon","button","PopupHeader","FavoritesPopup","length","alignItems","Navbar","popup","setPopup","href","PokedexLogo","cursor","initalState","add","updatedFav","push","remove","updatedItemIndex","findIndex","item","splice","store","createStore","combineReducers","action","App","pokemonsData","setPokemonsData","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","isLoading","setLoading","useEffect","res","next","results","previous","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6447099.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const PokemonTile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-width: 2px;\r\n  border-style: solid;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.4);\r\n  height: 180px;\r\n  max-width: 125px;\r\n  width: 100%;\r\n  &:hover {\r\n    animation: matrix 0.4s;\r\n    animation-fill-mode: forwards;\r\n  }\r\n`;","import styled from 'styled-components'\r\n\r\nexport const PokemonImg = styled.img`\r\n max-width: 130px;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const PokemonName = styled.p`\r\n  text-align: center;\r\n  font-size: 16px;\r\n  text-transform: capitalize;\r\n  font-weight: bold;\r\n`;","import {Box} from \"@material-ui/core\";\r\n\r\nexport default function TabPanel(props) {\r\n    const {children, value, index} = props;\r\n\r\n    return (\r\n        <>\r\n            {value === index && (\r\n                <Box className={\"tabPanel\"}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","export const getName = (data) => {\r\n    return data.name;\r\n}\r\n\r\nexport const getID = (data) => {\r\n    return `#${data.id}`;\r\n}\r\n\r\nexport const getType = (data) => {\r\n    return data.types[0].type.name\r\n}\r\n\r\nexport const getHeight = (data) => {\r\n    return data.height;\r\n}\r\n\r\nexport const getWeight = (data) => {\r\n    return data.weight;\r\n}\r\n\r\nexport const getImg = (data) => {\r\n    return data.sprites.other['official-artwork']['front_default'];\r\n}\r\n\r\nexport const getMove = (data, index) => {\r\n    return data.moves[index].move.name;\r\n}\r\n\r\nexport const getBaseExp = (data) => {\r\n    return data.base_experience;\r\n}\r\n\r\nexport const getAbility = (data) => {\r\n    return data.abilities[0]?.ability.name;\r\n}\r\n\r\nexport const getHPStats = (data) => {\r\n    return data.stats[0].base_stat;\r\n}\r\n\r\nexport const getSpeciesName = (data) => {\r\n    return data.species.name\r\n}\r\n\r\nexport const getAtkStats = (data) => {\r\n    return data.stats[1].base_stat;\r\n}\r\n\r\nexport const getDefStats = (data) => {\r\n    return data.stats[2].base_stat;\r\n}\r\n\r\nexport const getSpecialStats = (data) => {\r\n    return data.stats[3].base_stat;\r\n}\r\n\r\n\r\nexport const imgFromURL = (data) => {\r\n    const ID = parseInt(data.split('https://pokeapi.co/api/v2/pokemon/')[1]);\r\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${ID}.png`\r\n}","import React, {useState} from 'react';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from \"./tabPanel\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport {\r\n    getAbility, getAtkStats, getBaseExp, getDefStats, getHeight, getHPStats, getMove,\r\n    getSpecialStats, getSpeciesName, getType, getWeight\r\n} from \"../../helpers/pokemonHelper\";\r\n\r\nexport default function FullWidthTabs({data}) {\r\n    const [value, setValue] = useState(0);\r\n    const theme = useTheme();\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <Box className={'tabsWrapper'}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\">\r\n                <Tab className=\"tabHeader\" label=\"About \" />\r\n                <Tab className=\"tabHeader\" label=\"Base\" />\r\n                <Tab className=\"tabHeader\" label=\"Moves\" />\r\n            </Tabs>\r\n    \r\n            <SwipeableViews\r\n                className=\"swipeWrapper\"\r\n                index={value}\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                onChangeIndex={handleChangeIndex}>\r\n\r\n                <TabPanel className={\"tabPanel\"} value={value} index={0} dir={theme.direction}>\r\n                    <Box display=\"flex\" className={\"aboutTabItem\"} justifyContent=\"center\">\r\n                        <p className={\"dataHeader\"}>Name:</p>\r\n                        <p className={\"dataStat\"}>{getSpeciesName(data)}</p>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" className={\"aboutTabItem\"} justifyContent=\"center\"\r\n                         flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>BaseExp:</p>\r\n                        <p className={\"dataStat\"}>{getBaseExp(data)}</p>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" className={\"aboutTabItem\"} justifyContent=\"center\"\r\n                         flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>Ability:</p>\r\n                        <p className={\"dataStat\"}>{getAbility(data)}</p>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" className={\"aboutTabItem\"} justifyContent=\"center\"\r\n                         flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>Weight:</p>\r\n                        <p className={\"dataStat\"}>{getWeight(data)}</p>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" className={\"aboutTabItem\"} justifyContent=\"center\"\r\n                         flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>Type:</p>\r\n                        <p className={\"dataStat\"}>{getType(data)}</p>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" className={\"aboutTabItem\"} justifyContent=\"center\"\r\n                         flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>Height:</p>\r\n                        <p className={\"dataStat\"}>{getHeight(data)}</p>\r\n                    </Box>\r\n                </TabPanel>\r\n\r\n                <TabPanel className={\"tabPanel baseTab\"} value={value} index={1} dir={theme.direction}>\r\n                    <Box className={\"baseTabItem\"} justifyContent={\"space-around\"} flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>HP:</p>\r\n                        <p className={\"dataStat\"}>{getHPStats(data)}</p>\r\n                        <div className={\"progressBar red\"}>\r\n                            <span style={{ width: `${getHPStats(data) > 100 ? 100 : getHPStats(data)}%` }} />\r\n                        </div>\r\n                    </Box>\r\n                    <Box className={\"baseTabItem\"} justifyContent={\"space-around\"} flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>Attack:</p>\r\n                        <p className={\"dataStat\"}>{getAtkStats(data)}</p>\r\n                        <div className={\"progressBar green\"}>\r\n                            <span style={{ width: `${getAtkStats(data) > 100 ? 100 : getAtkStats(data)}%` }} />\r\n                        </div>\r\n                    </Box>\r\n\r\n                    <Box className={\"baseTabItem\"} justifyContent={\"space-around\"} flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>Defence:</p>\r\n                        <p className={\"dataStat\"}>{getDefStats(data)}</p>\r\n                        <div className={\"progressBar red\"}>\r\n                            <span style={{ width: `${getDefStats(data) > 100 ? 100 : getDefStats(data)}%` }} />\r\n                        </div>\r\n                    </Box>\r\n                    <Box className={\"baseTabItem\"} justifyContent={\"space-around\"} flexDirection={\"row\"}>\r\n                        <p className={\"dataHeader\"}>Special:</p>\r\n                        <p className={\"dataStat\"}>{getSpecialStats(data)}</p>\r\n                        <div className={\"progressBar green\"}>\r\n                            <span style={{ width: `${getSpecialStats(data) > 100 ? 100 : getSpecialStats(data)}%` }} />\r\n                        </div>\r\n                    </Box>\r\n                </TabPanel>\r\n\r\n                <TabPanel className={\"tabPanel\"} value={value} index={2} dir={theme.direction}>\r\n                    <Box className={\"movesTab\"}>\r\n                        {data.moves.slice(0, 9).map((val, index) => {\r\n                            return <p key={getMove(data, index)} className={\"move\"}>{getMove(data, index)}</p>\r\n                        })}\r\n                    </Box>\r\n                </TabPanel>\r\n            </SwipeableViews>\r\n        </Box>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/left-arrow.7bb0ed3a.svg\";","import styled from 'styled-components'\r\n\r\nexport const LeftArrow = styled.img`\r\n    width: 22px;\r\n    cursor: pointer;\r\n    z-index: 1;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const PokemonType = styled.p`\r\n    width: 100%;\r\n    max-width: 70px;\r\n    border-radius: 20px;\r\n    padding: 5px 10px 5px 10px;\r\n    margin-top: 10px;\r\n    align-self: flex-start;\r\n    font-weight: bold;\r\n    text-transform: capitalize;\r\n    background: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const PokemonPopupImg = styled.img`\r\n  position: absolute;\r\n  margin: 0 auto;\r\n  z-index: 2;\r\n  bottom: 30px;\r\n  top: 17%;\r\n  max-height: 220px;\r\n\r\n  @media (min-width: 768px) {\r\n    max-height: 300px;\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Box, Modal} from \"@material-ui/core\";\r\nimport FullWidthTabs from \"./tabs\";\r\nimport arrow from \"../../images/svg/left-arrow.svg\";\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getID, getImg, getName, getType} from \"../../helpers/pokemonHelper\";\r\nimport {LeftArrow} from \"../styled/popup/leftArrow\";\r\nimport {PokemonType} from \"../styled/popup/pokemonType\";\r\nimport {PokemonPopupImg} from \"../styled/popup/pokemonPopupImg\";\r\n\r\nexport default function PokemonPopup({data, closePopup, open}) {\r\n    const dispatch = useDispatch();\r\n    const pokemonType = getType(data);\r\n\r\n    const addHandler = (data) => {\r\n        return dispatch({type: \"ADD\", product: data});\r\n    }\r\n\r\n    const {favorites} = useSelector(state => ({\r\n        favorites: state.reducer.favorites\r\n    }));\r\n\r\n    const isFavorite = (pokemon) => {\r\n        return favorites.some(({name}) => name === pokemon.name);\r\n    }\r\n\r\n    return (\r\n        <Modal onClose={closePopup} open={open} className={\"modal\"}>\r\n            <Box className={`popupAdvView ${pokemonType}`} display=\"flex\" flexDirection=\"column\">\r\n                <Box className={\"topBar\"} width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\r\n                    <LeftArrow onClick={closePopup} alt={\"arrow\"} src={arrow}/>\r\n                    <FavoriteBorderIcon onClick={() => addHandler(data)}\r\n                                        className={`heartIcon ${isFavorite(data) ? `favorite` : ''}`}/>\r\n                </Box>\r\n                <Box className={\"typeBar\"} width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\r\n                    <p>{getName(data)}</p>\r\n                    <p>{getID(data)}</p>\r\n                </Box>\r\n                <PokemonType className={`${pokemonType}`}> {pokemonType} </PokemonType>\r\n                <PokemonPopupImg src={getImg(data)} alt={'img'}/>\r\n                <FullWidthTabs data={data}/>\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const PokemonWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  background: white;\r\n  box-sizing: border-box;\r\n  padding: 50px 5px 50px 5px;\r\n  \r\n  @media (min-width: 768px){\r\n    padding: 50px;\r\n  }\r\n`;","import React, {useState} from 'react'\r\nimport axios from \"axios\";\r\nimport {PokemonTile} from \"./styled/pokemonTile\";\r\nimport {PokemonImg} from \"./styled/pokemonImage\";\r\nimport {PokemonName} from \"./styled/PokemonTileName\";\r\nimport PokemonPopup from \"./popup/pokemonPopup\";\r\nimport {imgFromURL} from \"../helpers/pokemonHelper\";\r\nimport {PokemonWrapper} from \"./styled/pokemonWrapper\";\r\n\r\nexport default function PokemonList({pokemons}) {\r\n    const [pokemonData, selectPokemonData] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handlePopup = (url) => {\r\n        axios.get(url).then(response => selectPokemonData(response.data))\r\n        setOpen(true);\r\n    }\r\n\r\n    const closePopup = () => {\r\n        selectPokemonData('');\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <PokemonWrapper>\r\n            {pokemons.map(({name, url}) => (\r\n                <PokemonTile key={name} onClick={() => handlePopup(url)}>\r\n                    <PokemonName> {name} </PokemonName>\r\n                    <PokemonImg alt={'pokemon'} src={imgFromURL(url)}/>\r\n                </PokemonTile>\r\n            ))}\r\n\r\n            {pokemonData && <PokemonPopup open={open}\r\n                                          data={pokemonData}\r\n                                          closePopup={closePopup}/>}\r\n        </PokemonWrapper>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const PaginationWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    max-width: 1200px;\r\n    justify-content: space-between;\r\n    background: white;\r\n    border-radius: 10px;\r\n    padding: 20px 50px 20px 50px;\r\n    box-sizing: border-box;\r\n    margin-bottom: 20px;\r\n`;","import React from 'react'\r\nimport {Button} from \"@material-ui/core\";\r\nimport {PaginationWrapper} from \"./styled/pagination/paginationWrapper\";\r\n\r\nexport default function Pagination({gotoPrevPage, gotoNextPage}) {\r\n\r\n    return (\r\n        <PaginationWrapper>\r\n            {gotoPrevPage && <Button onClick={gotoPrevPage} variant=\"contained\" color=\"primary\"> Prev </Button>}\r\n            {gotoNextPage && <Button onClick={gotoNextPage} variant=\"contained\" color=\"primary\"> Next </Button>}\r\n        </PaginationWrapper>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const NavBar = styled.nav`\r\n  width: 100%;\r\n  height: 50px;\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-shadow: 0 5px 20px 1px #dbdbdb;\r\n  margin-top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const Logo = styled.img`\r\n    top: 5px;\r\n    max-width: 170px;\r\n    z-index: 10;\r\n    position: relative;\r\n`;\r\n\r\n","export default __webpack_public_path__ + \"static/media/PokedexLogo.a3ff97fd.png\";","import styled from 'styled-components'\r\n\r\nexport const FavoritesQty = styled.p`\r\n    background: #ffdd7a;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n    font-weight: 700;\r\n    font-size: 12px;\r\n    width: 10px;\r\n    height: 10px;\r\n    z-index: 1;\r\n    top: 1px;\r\n    left: 34px;\r\n    position: absolute;\r\n    border: 1px solid black;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const FavoriteWrapper = styled.div`\r\n   display: flex;\r\n  position: absolute;\r\n  left: 83%;\r\n \r\n  @media(min-width: 780px) {\r\n    left: 95%;\r\n  }\r\n`;","import styled from 'styled-components'\r\n\r\nexport const FavPokemon = styled.div`\r\nborder-bottom: 1px solid #e0e0e0;\r\n    width: 100%;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    img { \r\n        max-width: 120px; \r\n    }\r\n`;","import styled from 'styled-components'\r\n\r\nexport const ShrugFace = styled.p`\r\n  font-size: 40px;\r\n  margin: 20px;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const RemovePokemon = styled.button`\r\n    background: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n    bottom: 10px;\r\n    right: 10px;\r\n    border: 2px solid rgb(224, 224, 224);\r\n    color: black;\r\n    width: 64px;\r\n    height: 23px;\r\n`;\r\n\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const PopupHeader = styled.p`\r\ntext-align: center;\r\nfont-size: 18px;\r\nfont-weight: bold;\r\nmargin: 10px;\r\nborder-bottom: 1px solid lightgray;\r\npadding-bottom: 16px;\r\n`;\r\n\r\n\r\n\r\n","import {Box, Modal} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {FavPokemon} from \"./styled/favourites/favPokemon\";\r\nimport {ShrugFace} from \"./styled/favourites/shrugFace\";\r\nimport {RemovePokemon} from \"./styled/favourites/removePokemon\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getID, getImg, getName, getType} from \"../helpers/pokemonHelper\";\r\nimport {PopupHeader} from \"./styled/favourites/popupHeader\";\r\n\r\n\r\nexport default function FavoritesPopup({closePopup, open}) {\r\n    const dispatch = useDispatch();\r\n    const {favorites} = useSelector(state => ({\r\n        favorites: state.reducer.favorites\r\n    }));\r\n\r\n\r\n    const removePokemonHandler = (data) => {\r\n        return dispatch({type: \"REMOVE\", product: data});\r\n    }\r\n\r\n    return (\r\n        <Modal onClose={closePopup} open={open} className={\"modal\"}>\r\n            <Box className=\"favPokemons\" display={\"flex\"} flexDirection={\"column\"}>\r\n                <PopupHeader>Your Favourites Pokemons</PopupHeader>\r\n                {favorites.map((value) => {\r\n                    return <FavPokemon key={value.name}>\r\n                        <p>{getName(value)} {getID(value)}</p>\r\n                        <p>{getType(value)}</p>\r\n                        <img src={getImg(value)} alt={'img'}/>\r\n                        <RemovePokemon onClick={() => removePokemonHandler(value)}>Remove</RemovePokemon>\r\n                    </FavPokemon>\r\n                })}\r\n\r\n                {favorites.length === 0 &&\r\n                <Box display={\"flex\"} flexDirection={\"column\"}\r\n                     justifyContent={\"center\"} alignItems={\"center\"}\r\n                     className={\"noFavourites\"}\r\n                     width={\"100%\"}\r\n                     height={\"100%\"}>\r\n                    <p>No favourites Pokemons!</p>\r\n                    <ShrugFace>¯\\_(ツ)_/¯</ShrugFace>\r\n                    <p>Pick them!</p>\r\n                </Box>}\r\n            </Box>\r\n        </Modal>\r\n\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {NavBar} from \"./styled/navbar\";\r\nimport {Logo} from \"./styled/logo\";\r\nimport PokedexLogo from \"../images/PokedexLogo.png\"\r\nimport {useSelector} from \"react-redux\";\r\nimport GradeOutlinedIcon from '@material-ui/icons/GradeOutlined';\r\nimport {FavoritesQty} from \"./styled/quantity\";\r\nimport {FavoriteWrapper} from \"./styled/favouriteWrapper\";\r\nimport FavoritesPopup from \"./favouritesPopup\";\r\n\r\n\r\nexport default function Navbar() {\r\n    const [popup, setPopup] = useState(false);\r\n    const closePopup = () => setPopup(false);\r\n    const openPopup = () => setPopup(true)\r\n\r\n    const {favorites} = useSelector(state => ({\r\n        favorites: state.reducer.favorites\r\n    }));\r\n\r\n    return (\r\n        <NavBar>\r\n            <a href={'google.com'}>\r\n                <Logo alt={'logo'} src={PokedexLogo}/>\r\n            </a>\r\n\r\n            <FavoriteWrapper>\r\n                <GradeOutlinedIcon className={\"favoritesIcon\"}\r\n                                   cursor=\"pointer\"\r\n                                   alt={\"favouritesIcon\"}\r\n                                   onClick={openPopup}/>\r\n                <FavoritesQty>{favorites.length}</FavoritesQty>\r\n            </FavoriteWrapper>\r\n            {popup && <FavoritesPopup open={popup} closePopup={closePopup}/>}\r\n        </NavBar>\r\n    )\r\n}","import {createStore, combineReducers} from \"redux\";\r\n\r\nconst initalState = {\r\n    favorites: []\r\n};\r\n\r\nexport const add = (product, state) => {\r\n    const updatedFav = [...state.favorites];\r\n    if (!updatedFav.some(({name}) => name === product.name)) {\r\n        updatedFav.push({...product});\r\n    }\r\n    return {...state, favorites: updatedFav};\r\n};\r\n\r\nexport const remove = (product, state) => {\r\n    const updatedFav = [...state.favorites];\r\n    const updatedItemIndex = updatedFav.findIndex(item => item === product);\r\n    updatedFav.splice(updatedItemIndex, 1);\r\n    return {...state, favorites: updatedFav};\r\n};\r\n\r\nfunction reducer(state = initalState, action) {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return add(action.product, state);\r\n        case \"REMOVE\":\r\n            return remove(action.product, state);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const store = createStore(combineReducers({reducer}));\r\n","import './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport PokemonList from \"./components/pokemonList\";\r\nimport axios from 'axios'\r\nimport Pagination from \"./components/pagination\";\r\nimport Navbar from \"./components/navbar\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nfunction App() {\r\n    const url = 'https://pokeapi.co/api/v2/pokemon/?limit=12'\r\n    const [pokemonsData, setPokemonsData] = useState(['']);\r\n    const [currentPageUrl, setCurrentPageUrl] = useState(url);\r\n    const [nextPageUrl, setNextPageUrl] = useState(url);\r\n    const [prevPageUrl, setPrevPageUrl] = useState(url);\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        axios.get(currentPageUrl).then(res => {\r\n            setNextPageUrl(res.data.next)\r\n            setPokemonsData(res.data.results.map(pokemon => pokemon))\r\n            setPrevPageUrl(res.data.previous)\r\n            setLoading(false);\r\n        })\r\n    }, [currentPageUrl]);\r\n\r\n\r\n    const gotoNextPage = () => setCurrentPageUrl(nextPageUrl)\r\n    const gotoPrevPage = () => setCurrentPageUrl(prevPageUrl)\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"App\">\r\n                <Navbar/>\r\n                {!isLoading && <PokemonList pokemons={pokemonsData}/>}\r\n                <Pagination gotoPrevPage={gotoPrevPage}\r\n                            gotoNextPage={gotoNextPage}\r\n                />\r\n            </div>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}